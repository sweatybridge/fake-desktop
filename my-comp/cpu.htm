<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<style type="text/css">BODY
	{MARGIN: 0px}
</style>
</head>

<body scroll="no">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
  <tr> 
    <td height="75" colspan="2">
<div align="center"><font color="#FF6600" size="5"><img src="../image/how-comp-work.jpg" width="425" height="75"></font></div></td>
  </tr>
  <tr background="../image/background.gif"> 
    <td height="100" colspan="2">&nbsp;</td>
  </tr>
  <tr> 
    <td bgcolor="#0099FF">&nbsp;</td>
    <td bgcolor="#0099FF">
<p><font color="#FF6600" size="4"><strong><em>Central Processing Unit </em></strong></font></p>
      <p><font color="#FFFF00" size="3" face="Arial, Helvetica, sans-serif"><strong>Information 
        from an input device or from the computer¡¯s memory is communicated via 
        the bus to the central processing unit (CPU), which is the part of the 
        computer that translates commands and runs programs. The CPU is a microprocessor 
        chip¡ªthat is, a single piece of silicon containing millions of tiny, 
        microscopically wired electrical components. Information is stored in 
        a CPU memory location called a register. Registers can be thought of as 
        the CPU¡¯s tiny scratchpad, temporarily storing instructions or data. 
        When a program is running, one special register called the program counter 
        keeps track of which program instruction comes next by maintaining the 
        memory location of the next program instruction to be executed. The CPU¡¯s 
        control unit coordinates and times the CPU¡¯s functions, and it uses the 
        program counter to locate and retrieve the next instruction from memory.</strong></font> 
      </p>
      <p><strong><font color="#FFFF00">In a typical sequence, the CPU locates 
        the next instruction in the appropriate memory device. The instruction 
        then travels along the bus from the computer¡¯s memory to the CPU, where 
        it is stored in a special instruction register. Meanwhile, the program 
        counter changes¡ªusually increasing a small amount¡ªso that it contains 
        the location of the instruction that will be executed next. The current 
        instruction is analyzed by a decoder, which determines what the instruction 
        will do. Any data the instruction needs are retrieved via the bus and 
        placed in the CPU¡¯s registers. The CPU executes the instruction, and the 
        results are stored in another register or copied to specific memory locations 
        via a bus. This entire sequence of steps is called an instruction cycle. 
        Frequently, several instructions may be in process simultaneously, each 
        at a different stage in its instruction cycle. This is called pipeline 
        processing.</font></strong><br>
      </p></td>
  </tr>
</table>
</body>
</html>
